/*! For license information please see main.e2a000cbd8db055ae5a7.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefrontend("main",{"./src/a.reducers/auth_Reducers.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   userReducerActions: () => (/* binding */ userReducerActions)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ "./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js");\n\nconst userInfoFromStorage = localStorage.getItem("userInfo") ? JSON.parse(localStorage.getItem("userInfo")) : null;\nconst testResultsFromStorage = localStorage.getItem("testResults") ? JSON.parse(localStorage.getItem("testResults")) : {};\nconst systemColor = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";\nconst localStorageColor = localStorage.getItem("prefers-color-scheme");\nconst isDarkMode = localStorageColor ? localStorageColor : systemColor;\nconst initialState = {\n  //SideBars\n  currentPageNum_rdx: [1, 1],\n  inputPageNum_rdx: [1, 1],\n  pagesLength_rdx: [0, 0],\n  sideBar_R_QuestionsStatus_rdx: "QuestionsLanding",\n  sideBar_R_Questions_CurrentTestNumber_rdx: null,\n  sideBar_R_Questions_CurrentQuestionNumber_rdx: 1,\n  sideBar_R_Questions_SelectedQuestionNum_rdx: 1,\n  sideBar_R_QuestionLastPageNum_rdx: 0,\n  sideBar_R_QuestionTestResults_rdx: testResultsFromStorage,\n  submittedQuestionsList_rdx: [],\n  sideBar_L_isOpen_rdx: true,\n  sideBar_L_AllowCollapse_OnWindowResize_rdx: true,\n  sideBar_R_Main_isOpen_rdx: false,\n  sideBar_R_Notes_isOpen_rdx: false,\n  sideBar_R_Questions_isOpen_rdx: false,\n  sideBar_R_SearchBar_isActive_rdx: false,\n  //Modals\n  getStarted_ModalStatus_rdx: false,\n  getStartedView_rdx: "",\n  languageSettings_ModalStatus_rdx: false,\n  resetThisTest_ModalStatus_rdx: false,\n  //General\n  isAuthenticated_rdx: false,\n  loading_rdx: false,\n  activeFlag_rdx: "../../../../static/images/countries/1UnitedStates.png",\n  languageCurrent_rdx: "English",\n  isDarkMode_rdx: isDarkMode,\n  isDemoView_rdx: false,\n  isDashboardFullScreen_rdx: true,\n  activePanel: "main",\n  //User Info\n  loginError_rdx: "",\n  profile_id_rdx: "",\n  username_rdx: "",\n  email_rdx: "",\n  name_rdx: "",\n  isAdmin_rdx: "",\n  token_rdx: "",\n  userInfo_rdx: userInfoFromStorage,\n  //Registration\n  passwordResetPassCodeEmail_rdx: 0,\n  registered_rdx: false,\n  registrationError_rdx: "",\n  verificationEmail_rdx: 0,\n  verificationEmailFailureStatus_rdx: "",\n  generalFeedback_rdx: "",\n  //Verify Account\n  verifyAccountPassCodeStatus_rdx: true,\n  verifyAccountPassCodeFeedback_rdx: "Verification Code sent to your email_rdx.",\n  //Reset Password Email PassCode\n  resetPasswordEmailPassCodeStatus_rdx: true,\n  resetPasswordEmailPassCodeFeedback_rdx: "Enter your email_rdx to receive a reset code.",\n  //Reset Your Password\n  resetPasswordChangeStatus_rdx: true,\n  resetPasswordChangeFeedback_rdx: "Enter Verification Code and New Password"\n};\nconst userSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n  name: "user",\n  initialState,\n  reducers: {\n    // NavBar\n    setDemoView(state) {\n      state.isDemoView_rdx = true;\n    },\n    setRegularView(state) {\n      state.isDemoView_rdx = false;\n    },\n    setDemoCurrentPageNum(state, action) {\n      state.currentPageNum_rdx = action.payload;\n      state.inputPageNum_rdx = action.payload;\n    },\n    setDemoInputPageNum(state, action) {\n      if (action.payload[0] !== "") {\n        state.inputPageNum_rdx = action.payload[0];\n      } else {\n        state.inputPageNum_rdx = action.payload[1];\n      }\n    },\n    setDemoPageLength(state, action) {\n      if (action.payload[0] !== "") {\n        state.pagesLength_rdx = action.payload[0];\n      } else {\n        state.pagesLength_rdx = action.payload[1];\n      }\n    },\n    //General\n    setActivePanel(state, action) {\n      state.activePanel = action.payload;\n    },\n    // SideBar L\n    sideBar_L_Toggle_Visibility(state) {\n      state.sideBar_L_isOpen_rdx = !state.sideBar_L_isOpen_rdx;\n    },\n    sideBar_L_Open(state) {\n      state.sideBar_L_isOpen_rdx = true;\n    },\n    sideBar_L_Close(state) {\n      state.sideBar_L_isOpen_rdx = false;\n    },\n    sideBar_L_NotAllowCollapse_OnWindowResize(state) {\n      state.sideBar_L_AllowCollapse_OnWindowResize_rdx = false;\n    },\n    sideBar_L_YesAllowCollapse_OnWindowResize(state) {\n      state.sideBar_L_AllowCollapse_OnWindowResize_rdx = true;\n    },\n    // Notes SideBar\n    sideBar_R_Open_Notes(state) {\n      state.sideBar_R_Notes_isOpen_rdx = true;\n    },\n    sideBar_R_Close_Notes(state) {\n      state.sideBar_R_Notes_isOpen_rdx = false;\n    },\n    // R Main SideBar\n    sideBar_R_Open_Main(state) {\n      state.sideBar_R_Main_isOpen_rdx = true;\n    },\n    sideBar_R_Close_Main(state) {\n      state.sideBar_R_Main_isOpen_rdx = false;\n    },\n    // R Questions SideBar\n    sideBar_R_Open_Questions(state) {\n      state.sideBar_R_Questions_isOpen_rdx = true;\n    },\n    sideBar_R_Close_Questions(state) {\n      state.sideBar_R_Questions_isOpen_rdx = false;\n    },\n    sideBar_R_Questions_GoTo_Landing(state) {\n      state.sideBar_R_QuestionsStatus_rdx = "QuestionsLanding";\n    },\n    sideBar_R_Questions_GoTo_Test(state, action) {\n      state.sideBar_R_QuestionsStatus_rdx = "Questions";\n      state.sideBar_R_Questions_CurrentTestNumber_rdx = action.payload;\n    },\n    sideBar_R_Questions_GoTo_TestResults(state, action) {\n      state.sideBar_R_QuestionsStatus_rdx = "TestResults";\n    },\n    sideBar_R_Questions_GoTo_QuestionNumber(state, action) {\n      state.sideBar_R_Questions_CurrentQuestionNumber_rdx = action.payload;\n    },\n    sideBar_R_Questions_setQuestionNumber(state, action) {\n      state.sideBar_R_Questions_CurrentQuestionNumber_rdx = action.payload;\n      state.sideBar_R_Questions_SelectedQuestionNum_rdx = action.payload;\n    },\n    sideBar_R_Questions_setSelectedQuestionNumber(state, action) {\n      state.sideBar_R_Questions_SelectedQuestionNum_rdx = action.payload;\n    },\n    updateQuestionResults(state, action) {\n      const {\n        testNumber,\n        questionNumber,\n        answerData\n      } = action.payload;\n      if (!state.sideBar_R_QuestionTestResults_rdx[testNumber]) {\n        state.sideBar_R_QuestionTestResults_rdx[testNumber] = {};\n      }\n      state.sideBar_R_QuestionTestResults_rdx[testNumber][questionNumber] = answerData;\n      localStorage.setItem("testResults", JSON.stringify(state.sideBar_R_QuestionTestResults_rdx));\n    },\n    deleteTestResults(state, action) {\n      console.log("action.payload: ", action.payload);\n      if (state.sideBar_R_QuestionTestResults_rdx[action.payload]) {\n        delete state.sideBar_R_QuestionTestResults_rdx[action.payload];\n      }\n      localStorage.setItem("testResults", JSON.stringify(state.sideBar_R_QuestionTestResults_rdx));\n      state.sideBar_R_Questions_CurrentTestNumber_rdx = null;\n      state.sideBar_R_Questions_CurrentQuestionNumber_rdx = 1;\n      state.sideBar_R_Questions_SelectedQuestionNum_rdx = 1;\n      state.sideBar_R_QuestionLastPageNum_rdx = 0;\n    },\n    resetQuestionResults(state) {\n      state.sideBar_R_QuestionTestResults_rdx = {};\n      localStorage.removeItem("testResults");\n    },\n    sideBar_R_SearchBar_isActive(state, action) {\n      state.sideBar_R_SearchBar_isActive_rdx = action.payload;\n    },\n    // Get Started Modal\n    getStartedModalLogIn(state) {\n      state.getStarted_ModalStatus_rdx = true;\n      state.sideBar_R_Main_isOpen_rdx = false;\n      state.getStartedView_rdx = "LogInModal";\n    },\n    getStartedModalCreateAccount(state) {\n      state.getStarted_ModalStatus_rdx = true;\n      state.sideBar_R_Main_isOpen_rdx = false;\n      state.getStartedView_rdx = "CreateAccountModal";\n    },\n    getStartedModalOpen(state) {\n      state.getStarted_ModalStatus_rdx = true;\n      state.sideBar_R_Main_isOpen_rdx = false;\n    },\n    getStartedModalClose(state) {\n      state.getStarted_ModalStatus_rdx = false;\n      state.sideBar_R_Main_isOpen_rdx = false;\n    },\n    // Registration\n    registerModalClose(state) {\n      state.getStarted_ModalStatus_rdx = false;\n    },\n    registerSuccess(state, action) {\n      state.registered_rdx = true;\n      state.isAuthenticated_rdx = false;\n      state.loading_rdx = false;\n      state.getStartedView_rdx = "VerifyAccountModal";\n      state.userInfo_rdx = action.payload;\n    },\n    registerFail(state, action) {\n      state.registered_rdx = false;\n      state.isAuthenticated_rdx = false;\n      state.loading_rdx = false;\n      state.registrationError_rdx = action.payload;\n    },\n    registerErrorReset(state) {\n      state.registrationError_rdx = "";\n    },\n    // Verify Your Account\n    verifyAccountPassCodeSuccess(state) {\n      state.getStartedView_rdx = "VerificationSuccessModal";\n      state.generalFeedback_rdx = "";\n    },\n    verifyAccountPassCodeFail(state, action) {\n      state.verifyAccountPassCodeStatus_rdx = false;\n      state.verifyAccountPassCodeFeedback_rdx = action.payload;\n      state.generalFeedback_rdx = action.payload;\n    },\n    verifyAccountPassCodeReset(state) {\n      state.verifyAccountPassCodeStatus_rdx = true;\n    },\n    verifyAccountPassCodeResent(state, action) {\n      state.verifyAccountPassCodeStatus_rdx = true;\n      state.verifyAccountPassCodeFeedback_rdx = action.payload;\n      state.generalFeedback_rdx = action.payload;\n      state.verificationEmail_rdx += 1;\n    },\n    verifyAccountPassCodeResentFailure(state) {\n      state.verifyAccountPassCodeStatus_rdx = false;\n      state.verifyAccountPassCodeFeedback_rdx = action.payload;\n      state.generalFeedback_rdx = action.payload;\n      state.verificationEmailFailureStatus_rdx = "Failed";\n    },\n    // Verification Success\n    GoTo_LogInModal_rdx(state) {\n      state.getStartedView_rdx = "LogInModal";\n    },\n    // Log In\n    loginRequest(state) {\n      state.loading_rdx = true;\n    },\n    loginSuccess(state, action) {\n      state.isAuthenticated_rdx = true;\n      state.loading_rdx = false;\n      state.userInfo_rdx = action.payload;\n      state.getStarted_ModalStatus_rdx = false;\n    },\n    loginFail(state, action) {\n      state.loading_rdx = false;\n      state.loginError_rdx = action.payload;\n    },\n    loginError_rdxReset(state) {\n      state.loginError_rdx = "";\n    },\n    // Log Out\n    logoutSuccess(state) {\n      state.isAuthenticated_rdx = false;\n    },\n    logoutFail(state) {\n      state;\n    },\n    // Authentication\n    authSuccess(state) {\n      state.isAuthenticated_rdx = true;\n    },\n    authFail(state) {\n      state.isAuthenticated_rdx = false;\n    },\n    token_rdxSuccess(state, action) {\n      state.token_rdx = action.payload;\n    },\n    // Reset Password - Email PassCode\n    passwordResetPassCodeEmailSentSuccess(state, action) {\n      state.passwordResetPassCodeEmail_rdx += 1;\n      state.resetPasswordEmailPassCodeStatus_rdx = true;\n      state.resetPasswordEmailPassCodeFeedback_rdx = action.payload;\n      state.getStartedView_rdx = "ResetPasswordEnterPassCodeModal";\n    },\n    passwordResetPassCodeEmailSentFailure(state, action) {\n      state.resetPasswordEmailPassCodeStatus_rdx = false;\n      state.resetPasswordEmailPassCodeFeedback_rdx = action.payload;\n    },\n    passwordResetPassCodeEmailResetStatus(state) {\n      state.resetPasswordEmailPassCodeStatus_rdx = true;\n    },\n    // Reset Password - Change\n    passwordResetSuccess(state) {\n      state.resetPasswordChangeStatus_rdx = true;\n      state.resetPasswordChangeFeedback_rdx = "";\n      state.passCodeStatus_rdx = true;\n      state.passCodeFeedback_rdx = "";\n      state.getStartedView_rdx = "PasswordChangedSuccessfullyModal";\n    },\n    passwordResetFailurePasswordIssue(state, action) {\n      state.resetPasswordChangeStatus_rdx = false;\n      state.resetPasswordChangeFeedback_rdx = action.payload; //gets fed into general feedback in frontend\n    },\n\n    passwordResetFailurePassCodeIssue(state, action) {\n      state.resetPasswordChangeStatus_rdx = false;\n      state.resetPasswordChangeFeedback_rdx = action.payload;\n    },\n    passwordResetFailureIssue(state, action) {\n      state.resetPasswordChangeStatus_rdx = false;\n      state.resetPasswordChangeFeedback_rdx = action.payload;\n      state.generalFeedback_rdx = action.payload;\n    },\n    passwordResetPasswordChangeResetStatus(state) {\n      state.resetPasswordChangeStatus_rdx = true;\n    },\n    //Delete - User\n    deleteUserSuccess(state) {\n      state.isAuthenticated_rdx = false;\n    },\n    deleteUserFail(state) {\n      state;\n    },\n    // Language Modal Settings\n    languageSettingsModalOpen(state) {\n      state.languageSettings_ModalStatus_rdx = true;\n    },\n    languageSettingsModalClose(state) {\n      state.languageSettings_ModalStatus_rdx = false;\n    },\n    languageSettingsChange(state, action) {\n      state.languageCurrent_rdx = action.payload;\n      switch (action.payload) {\n        case "English":\n          state.activeFlag_rdx = "../../../../static/images/countries/1UnitedStates.png";\n          break;\n        case "Spanish":\n          state.activeFlag_rdx = "../../../../static/images/countries/2Mexico.png";\n          break;\n        case "Chinese":\n          state.activeFlag_rdx = "../../../../static/images/countries/3China.png";\n          break;\n        case "French":\n          state.activeFlag_rdx = "../../../../static/images/countries/4France.png";\n          break;\n        case "German":\n          state.activeFlag_rdx = "../../../../static/images/countries/5Germany.png";\n          break;\n        case "Japanese":\n          state.activeFlag_rdx = "../../../../static/images/countries/6Japan.png";\n          break;\n        case "Portuguese":\n          state.activeFlag_rdx = "../../../../static/images/countries/7Portugal.png";\n          break;\n        case "Russian":\n          state.activeFlag_rdx = "../../../../static/images/countries/8Russia.png";\n          break;\n        case "Arabic":\n          state.activeFlag_rdx = "../../../../static/images/countries/9UnitedArabEmirates.png";\n          break;\n        case "Italian":\n          state.activeFlag_rdx = "../../../../static/images/countries/10Italy.png";\n          break;\n        case "Korean":\n          state.activeFlag_rdx = "../../../../static/images/countries/11Korea.png";\n          break;\n        case "Hindu":\n          state.activeFlag_rdx = "../../../../static/images/countries/12India.png";\n          break;\n        default:\n          state.activeFlag_rdx = "../../../../static/images/countries/1UnitedStates.png";\n      }\n    },\n    languageSettingsEnglish(state) {\n      state.languageCurrent_rdx = "English";\n    },\n    languageSettingsSpanish(state) {\n      state.languageCurrent_rdx = "Spanish";\n    },\n    languageSettingsMandarin(state) {\n      state.languageCurrent_rdx = "Mandarin";\n    },\n    languageSettingsFrench(state) {\n      state.languageCurrent_rdx = "French";\n    },\n    languageSettingsGerman(state) {\n      state.languageCurrent_rdx = "German";\n    },\n    languageSettingsJapanese(state) {\n      state.languageCurrent_rdx = "Japanese";\n    },\n    languageSettingsPortuguese(state) {\n      state.languageCurrent_rdx = "Portuguese";\n    },\n    languageSettingsRussian(state) {\n      state.languageCurrent_rdx = "Russian";\n    },\n    languageSettingsArabic(state) {\n      state.languageCurrent_rdx = "Arabic";\n    },\n    languageSettingsItalian(state) {\n      state.languageCurrent_rdx = "Italian";\n    },\n    languageSettingsKorean(state) {\n      state.languageCurrent_rdx = "Korean";\n    },\n    languageSettingsHindi(state) {\n      state.languageCurrent_rdx = "Hindi";\n    },\n    resetThisTestModalOpen(state) {\n      state.resetThisTest_ModalStatus_rdx = true;\n    },\n    resetThisTestModalClose(state) {\n      state.resetThisTest_ModalStatus_rdx = false;\n    },\n    //Dark/Light Settings\n    setDarkLightMode(state, action) {\n      state.isDarkMode_rdx = action.payload;\n      localStorage.setItem("prefers-color-scheme", action.payload);\n    },\n    setDarkLightModeToTrue(state) {\n      state.isDarkMode_rdx = "dark";\n      localStorage.setItem("prefers-color-scheme", "dark");\n    },\n    setDarkLightModeToFalse(state) {\n      state.isDarkMode_rdx = "light";\n      localStorage.setItem("prefers-color-scheme", "light");\n    }\n  }\n});\nconst userReducerActions = userSlice.actions;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (userSlice);\n\n//# sourceURL=webpack://frontend/./src/a.reducers/auth_Reducers.js?')}},(function(e){e.h=()=>"36eb16169df1601712b0"}));